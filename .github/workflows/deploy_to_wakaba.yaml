name: Deploy to wakaba

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    uses: ./.github/workflows/ci.yaml
  build:
    runs-on: ubuntu-latest
    needs: ci
    env:
      CACHE_PATH: |
        ~/.cargo/bin/
        ~/.cargo/registry/index/
        ~/.cargo/registry/cache/
        ~/.cargo/git/db/
        ./**/target
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache/restore@v3
        id: cache-restore-cargo
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-
            ${{ runner.os }}-cargo-

      - name: Build wakaba_game_service_manage_api
        run: cargo build --release -p wakaba_game_service_manage_api --target x86_64-unknown-linux-gnu

      - uses: actions/cache/save@v3
        id: cache-save-cargo
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}

      - uses: actions/upload-artifact@v4
        with:
          name: wakaba_game_service_manage_api
          path: target/x86_64-unknown-linux-gnu/release/wakaba_game_service_manage_api

  create-release-tag:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      release_tag: ${{ steps.tag_version.outputs.new_tag }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: wakaba_game_service_manage_api
          path: /tmp/wakaba_game_service_manage_api/

      - name: Package Artifact
        run: tar -czvf /tmp/wakaba_game_service_manage_api.tar.gz -C /tmp wakaba_game_service_manage_api

      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v6.2
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: /tmp/wakaba_game_service_manage_api.tar.gz
          asset_name: wakaba_game_service_manage_api.tar.gz
          asset_content_type: application/gzip

      - name: Set tag output
        run: echo "tag_name=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_ENV

  deploy-to-wakaba:
    runs-on: ubuntu-latest
    needs: create-release-tag
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-northeast-1
      AWS_ROLE_TO_ASSUME: arn:aws:iam::616657986447:role/romira_service_manage_bot_v2_github_actions_deploy_role
      INSTANCE_ID: mi-0f5dbaf1823ba7030
      SOURCE_FILE_PATH: Cargo.toml
      DESTINATION_FILE_PATH: /home/romira/Cargo.toml

    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}


      - name: deploy to wakaba
        run: |
          COMMANDS="
            curl -L -o /tmp/wakaba_game_service_manage_api.tar.gz 'https://github.com/${{ github.repository }}/releases/download/${{ needs.create-release-tag.outputs.release_tag }}/wakaba_game_service_manage_api.tar.gz' &&
            tar -xzvf /tmp/wakaba_game_service_manage_api.tar.gz -C /tmp &&
            sudo rsync -a --delete /tmp/wakaba_game_service_manage_api/ /usr/local/wakaba_game_service_manage_api/bin/ &&
            sudo chmod 755 /usr/local/wakaba_game_service_manage_api/bin/wakaba_game_service_manage_api &&
            sudo systemctl restart wakaba_game_service_manage_api.service
          "
          COMMANDS=$(echo $COMMANDS | tr '\n' ' ')
          
          COMMAND_ID=$(aws ssm send-command --instance-ids ${{ env.INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters "{\"commands\":[\"$COMMANDS\"]}" \
            --region $AWS_REGION \
            --query "Command.CommandId" \
            --output text)
          
          sleep 5  # コマンドが実行されるまで待つ
          aws ssm list-command-invocations --command-id "$COMMAND_ID" --details
          
          INVOCATIONS=$(aws ssm list-command-invocations --command-id "$COMMAND_ID" --details)
          
